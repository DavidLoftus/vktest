project(vktest)
cmake_minimum_required(VERSION 3.10)

set (CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/CMake")

		
# Source Files

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_EXPORT_COMPILE_COMMANDS YES)

set(EXTRA_FILES ${EXTRA_FILES} pipeline.cpp)

add_executable(${PROJECT_NAME} main.cpp)
target_sources(${PROJECT_NAME} PUBLIC ${EXTRA_FILES})

find_package(glfw3 3.3 REQUIRED)
if(GLFW3_FOUND)
	include_directories(${GLFW3_INCLUDE_PATH})
	target_link_libraries(${PROJECT_NAME} ${GLFW3_LIBRARY})
endif()

find_package(boost 1.61 REQUIRED)
if(Boost_FOUND)
	include_directories(${Boost_INCLUDE_DIRS})
	target_link_libraries(${PROJECT_NAME} ${Boost_LIBRARIES})
endif()

find_package(Vulkan REQUIRED)
if (VULKAN_FOUND)
	message(STATUS "Found Vulkan, Including and Linking now")
	include_directories(${Vulkan_INCLUDE_DIRS})
	target_link_libraries(${PROJECT_NAME} ${Vulkan_LIBRARIES})
endif (VULKAN_FOUND)


#########################
#						#
#	   GLSL Shaders		#
#						#
#########################

set(GLSL_VALIDATOR "glslangValidator")
file(GLOB_RECURSE GLSL_SOURCE_FILES
	"shaders/*.frag"
	"shaders/*.vert"
	"shaders/*.comp"
	)

foreach(GLSL ${GLSL_SOURCE_FILES})
	get_filename_component(FILE_NAME ${GLSL} NAME)
	get_filename_component(FILE_EXT ${GLSL} EXT)
	message(STATUS "Found ${FILE_EXT} shader '${FILE_NAME}'")
	set(SPIRV "${PROJECT_BINARY_DIR}/shaders/${FILE_NAME}.spv")
	add_custom_command(
		OUTPUT ${SPIRV}
		COMMAND ${CMAKE_COMMAND} -E make_directory "${PROJECT_BINARY_DIR}/shaders/"
		COMMAND ${GLSL_VALIDATOR} -V ${GLSL} -o ${SPIRV}
		DEPENDS ${GLSL})
	list(APPEND SPIRV_BINARY_FILES ${SPIRV})
endforeach(GLSL)

add_custom_target(
	SpirvShaders 
	DEPENDS ${SPIRV_BINARY_FILES}
	)

add_dependencies(${PROJECT_NAME} SpirvShaders)

add_custom_command(TARGET ${PROJECT_NAME} POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E make_directory "$<TARGET_FILE_DIR:${PROJECT_NAME}>/shaders/"
    COMMAND ${CMAKE_COMMAND} -E copy_directory
        "${PROJECT_BINARY_DIR}/shaders"
        "$<TARGET_FILE_DIR:${PROJECT_NAME}>/shaders"
        )
		
# Cotire
include(cotire)
cotire(vktest)